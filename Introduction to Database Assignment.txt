1. What is a Database? Explain with an example on why should we need a database?
Ans.A database is a structured collection of data, organized for efficient storage, retrieval, and management. Databases allow multiple users to access and update data concurrently while maintaining consistency and security.
Example: Consider an online bookstore that needs to keep track of its inventory, customer orders, and sales. Using a database ensures that inventory updates after every sale, customers can view real-time product availability, and order histories are easily retrievable. This centralized data management improves operational efficiency and provides a smooth user experience.

2. Write a short note on File base storage system. Explain the major challenges of a File-based storage system?
Ans.A file-based storage system is a data storage method where files are used to store and organize data. Data is stored in separate files, often without any central control over the organization or structure, which can lead to several issues.
Challenges:
Data Redundancy: Repeating data across files can lead to storage waste and inconsistencies.
Data Isolation: Finding and linking related data across files is challenging, as each file operates independently.
Concurrency Issues: Multiple users accessing files simultaneously may face conflicts and data corruption.
Lack of Security: Managing access rights across numerous files is complex and can expose data to unauthorized users.
Scalability Constraints: File-based systems struggle with scalability, making it hard to manage large datasets efficiently.

3. What is DBMS? What was the need for DBMS?
Ans.A Database Management System (DBMS) is a software application designed to interact with users, applications, and the database itself to capture and analyze data. It provides a systematic and organized way of managing data, supporting operations such as data insertion, querying, updating, and deletion.
Need for DBMS:
To eliminate the redundancy and inconsistency present in file-based systems.
To provide efficient data access and a way to enforce data integrity and security.
To support concurrency control, allowing multiple users to access and modify data simultaneously.
To offer a way to organize and structure data for improved accessibility and scalability.

4. Explain 5 challenges of file-based storage system which was tackled by DBMS?
Ans.DBMS addresses the following file-based storage challenges:
Data Redundancy: DBMS normalizes data, reducing duplication and inconsistency.
Data Isolation: DBMS centralizes data, allowing users to retrieve related information efficiently.
Concurrency Control: DBMS provides transaction management to handle simultaneous data access without conflicts.
Data Security: DBMS supports user authentication and access control, ensuring data is secure.
Data Integrity: DBMS enforces integrity constraints to maintain data accuracy and reliability.

5. List out the different types of classification in DBMS and explain them in depth?
Ans.DBMS can be classified based on various criteria:
Data Model:

Hierarchical DBMS: Organizes data in a tree structure, with parent-child relationships.
Network DBMS: Uses a graph structure, allowing many-to-many relationships.
Relational DBMS: Organizes data in tables with relationships defined by primary and foreign keys.
Object-oriented DBMS: Stores data as objects, similar to object-oriented programming.

Number of Users:
Single-user DBMS: Designed for one user at a time.
Multi-user DBMS: Supports multiple users simultaneously.

DBMS Location:
Centralized DBMS: Data stored and managed in a single location.
Distributed DBMS: Data distributed across multiple locations, accessible from various servers.
Type of Access Path:

Navigational DBMS: Allows traversal through paths based on the network or hierarchical structures.
SQL-based DBMS: Uses SQL queries to manage data, often in relational databases.

6. What is the significance of Data Modelling and explain the types of data modeling?
Ans.Data Modeling defines the structure of the data to be stored in a database, providing a blueprint for database design and development. It aids in visualizing data requirements, establishing relationships, and enforcing data integrity.
Types of Data Modeling:
Conceptual Data Modeling: High-level modeling that captures the overall structure of data in the system without going into specifics.
Logical Data Modeling: Defines entities, attributes, and relationships, focusing on how data should be organized logically.
Physical Data Modeling: Involves the actual design of the database structure, considering performance, indexing, and storage details.

7. Explain 3 schema architecture along with its advantages.
Ans.The Three Schema Architecture separates the database into three levels:
Internal Schema (Physical Level): Defines how data is stored physically, including indexing and partitioning.
Conceptual Schema (Logical Level): Represents the structure of the whole database for a community of users, detailing relationships between data elements.
External Schema (View Level): Defines how individual users or applications view the data, allowing customized access.
Advantages:
Data Abstraction: Each level hides complexities from the one above, making data handling easier.
Improved Security: Users only access the data they need, enhancing security.
Flexibility: Changes in the physical or conceptual schema donâ€™t affect external views, making database management more adaptable.
Data Independence: Logical and physical data independence allows the structure to evolve without disrupting applications.